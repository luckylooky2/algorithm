// 다각형의 면적 : 기하학, 다각형의 넓이
const input = require("fs")
  .readFileSync(0, "utf-8")
  .trim()
  .split("\n")
  .map((v) => v.split(" ").map((v) => +v));
const [n] = input.shift();
const vertex = input;
const A = input.shift();
let sum = 0;

function distance(ver1, ver2) {
  return Math.sqrt(Math.pow(ver1[0] - ver2[0], 2) + Math.pow(ver1[1] - ver2[1], 2));
}

function slope(ver1, ver2) {
  return (ver1[1] - ver2[1]) / (ver1[0] - ver2[0]);
}

for (let i = 0; i < vertex.length - 1; i++) {
  const B = vertex[i];
  const C = vertex[i + 1];
  const VecAB = [B[0] - A[0], B[1] - A[1]];
  const VecAC = [C[0] - A[0], C[1] - A[1]];
  const area = (VecAB[0] * VecAC[1] - VecAC[0] * VecAB[1]) / 2;
  sum += area;
}

console.log(Math.abs(sum).toFixed(1));

// Try 1
// 순서가 중요하다고 생각함
// - 순서를 따라가면서 제외되는 삼각형, 사각형을 전체 사각형에서 제외
// - 삼각형은 제외할 수 있지만 언제 사각형이 제거되는지 조건을 구하지 못함

// Try 2
// - 한 점을 기준으로 모든 점을 연결하여 삼각형의 합으로 구함
// - 외적을 이용한 삼각형의 계산
// - 이 과정에서 중요한 점은, 벡터의 외적에 의해 나오는 면적 값에는 부호가 포함된다는 것
// - 부호는 삼각형이 시계 방향으로 이루어졌는지, 반시계 방향으로 이루어졌는지를 나타냄 => 시계 방향과 반시계 방향으로 만들어진 삼각형의 면적이 서로 상쇄되도록 하기 위함
// - 어떤 다각형이 시계 방향으로 구성된 부분이 있다면, 그 면적은 음수가 되고, 반시계 방향의 부분은 양수가 됨
// - 복잡한 다각형에서 내부와 외부가 섞여 있을 수 있음

// 외적을 이용한 세 점 사이의 넓이를 구하는 식
// - 1. 기준점에서 다른 두 점에 대한 벡터를 구한다: AB (x2 - x1, y2 - y1), AC (x3 - x1, y3 - y1)
// - 2. 두 벡터의 외적(크로스 곱)은, 두 벡터가 이루는 평행사변형의 넓이를 나타낸다: ABx * ACy - ABy * ACx
// - 3. 평행사변형의 넓이를 2로 나눈 절대값으로 삼각형의 넓이를 구한다

// 평행사변형의 넓이
// - 넓이 = 밑변(하나의 벡터) * 높이(하나의 벡터에 수직인 성분 = 다른 벡터의 크기 * 두 벡터 사이의 각도의 sin)
// - 사인 값이 두 벡터 사이의 "수직 성분"을 나타내기 때문이다. 또한, 벡터 사이의 각도가 넓이에 영향을 미친다
// - 벡터 사이의 각도는 두 벡터의 기점에서의 각각의 두 기울기(빗변의 길이)를 알면 구할 수 있다
// - AB와 AC의 내적(ABx * ACx + ABy * ACy) = AB의 크기 * AC의 크기 * 두 벡터 사이의 각도의 cos
// - 내적 공식은 두 벡터의 크기와 그 사이의 각도 사이의 관계를 나타내기 때문에, 두 벡터 사이의 각도를 구할 수 있다
// - 내적: 한 벡터를 다른 벡터의 방향으로 투영(내적은 한 벡터가 다른 벡터에 얼마나 “겹쳐져 있는지”를 측정)하는 과정
// - 즉, 두 벡터가 얼마나 같은 방향을 향하고 있는지를 측정
// - 방향이 같을수록 내적의 값이 커지고, 수직일수록 내적이 0에 가까워짐
// - 결국, 두 벡터를 알면 평행사변형의 넓이를 알 수 있다
// - cf> 외적 자체가 평행사변형의 넓이를 계산하는 기하학적 원리에서 나온 연산이기 때문
// - 외적의 정의는 벡터가 만드는 기하학적 공간에서의 면적을 측정하는 방식. 이를 통해 두 벡터가 만드는 기하학적 공간의 넓이를 구할 수 있습니다

// 1. 외적은 두 벡터의 면적을 측정하는 방식이다
// 2. 면적을 측정하기 위해서는 두 벡터 사이의 각도가 필요하다.
// 3. 두 벡터가 이루는 각도는 내적(두 벡터가 얼마나 같은 방향을 향하고 있는지)을 이용하여 구할 수 있다.
// 4. 결론적으로 두 벡터의 성분을 모두 알고 있다면 벡터로 만들어지는 평행사변형의 면적을 측정할 수 있다.

// 벡터 외적의 기하학적 의미
// - 외적 또한 내적과 마찬가지로 새로운 벡터를 만든다
// - 1.	방향: 외적의 결과 벡터는 두 벡터로 이루어진 평면에 수직인 벡터가 됩니다
// - 2.	크기: 외적 벡터의 크기는 두 벡터가 이루는 평행사변형의 넓이에 비례합니다
// - 단, 2차원에서의 벡터 외적은 방향 벡터는 의미가 없다
// - why? 3차원 벡터에서 z축이 0인 벡터라고 생각하면, 외적 결과는 오직 z축 방향의 성분만 갖는 벡터로 계산된다. 하지만 z축은 고려하지 않았으므로 결국 스칼라 값으로 처리
// - 즉, 2차원에서의 벡터 외적의 결과는 (방향: z축, 크기: 평행사변형의 넓이)가 되는 것

// 3
// 0 0
// 4 2
// 3 1
// 1

// 3
// 0 0
// 0 2
// 4 2
// 4
